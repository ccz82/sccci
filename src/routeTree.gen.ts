/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as publicPublicImport } from './routes/(public)/_public'
import { Route as authAuthImport } from './routes/(auth)/_auth'
import { Route as appAppImport } from './routes/(app)/_app'
import { Route as publicPublicIndexImport } from './routes/(public)/_public.index'
import { Route as authAuthSignupImport } from './routes/(auth)/_auth.signup'
import { Route as authAuthSigninImport } from './routes/(auth)/_auth.signin'
import { Route as appAppUserGuideImport } from './routes/(app)/_app.user-guide'
import { Route as appAppPeopleImport } from './routes/(app)/_app.people'
import { Route as appAppPaintingsAiDescImport } from './routes/(app)/_app.paintings-ai-desc'
import { Route as appAppPaintingsImport } from './routes/(app)/_app.paintings'
import { Route as appAppOcrImport } from './routes/(app)/_app.ocr'
import { Route as appAppMediaImport } from './routes/(app)/_app.media'
import { Route as appAppDashboardImport } from './routes/(app)/_app.dashboard'
import { Route as appAppClassifyImport } from './routes/(app)/_app.classify'
import { Route as appAppClassifierImport } from './routes/(app)/_app.classifier'
import { Route as authAuthVerifyAccountIndexImport } from './routes/(auth)/_auth.verify-account.index'
import { Route as authAuthForgotPasswordIndexImport } from './routes/(auth)/_auth.forgot-password.index'
import { Route as authAuthVerifyAccountTokenImport } from './routes/(auth)/_auth.verify-account.$token'
import { Route as authAuthForgotPasswordTokenImport } from './routes/(auth)/_auth.forgot-password.$token'

// Create Virtual Routes

const publicImport = createFileRoute('/(public)')()
const authImport = createFileRoute('/(auth)')()
const appImport = createFileRoute('/(app)')()

// Create/Update Routes

const publicRoute = publicImport.update({
  id: '/(public)',
  getParentRoute: () => rootRoute,
} as any)

const authRoute = authImport.update({
  id: '/(auth)',
  getParentRoute: () => rootRoute,
} as any)

const appRoute = appImport.update({
  id: '/(app)',
  getParentRoute: () => rootRoute,
} as any)

const publicPublicRoute = publicPublicImport.update({
  id: '/_public',
  getParentRoute: () => publicRoute,
} as any)

const authAuthRoute = authAuthImport.update({
  id: '/_auth',
  getParentRoute: () => authRoute,
} as any)

const appAppRoute = appAppImport.update({
  id: '/_app',
  getParentRoute: () => appRoute,
} as any)

const publicPublicIndexRoute = publicPublicIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => publicPublicRoute,
} as any)

const authAuthSignupRoute = authAuthSignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => authAuthRoute,
} as any)

const authAuthSigninRoute = authAuthSigninImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => authAuthRoute,
} as any)

const appAppUserGuideRoute = appAppUserGuideImport.update({
  id: '/user-guide',
  path: '/user-guide',
  getParentRoute: () => appAppRoute,
} as any)

const appAppPeopleRoute = appAppPeopleImport.update({
  id: '/people',
  path: '/people',
  getParentRoute: () => appAppRoute,
} as any)

const appAppPaintingsAiDescRoute = appAppPaintingsAiDescImport.update({
  id: '/paintings-ai-desc',
  path: '/paintings-ai-desc',
  getParentRoute: () => appAppRoute,
} as any)

const appAppPaintingsRoute = appAppPaintingsImport.update({
  id: '/paintings',
  path: '/paintings',
  getParentRoute: () => appAppRoute,
} as any)

const appAppOcrRoute = appAppOcrImport.update({
  id: '/ocr',
  path: '/ocr',
  getParentRoute: () => appAppRoute,
} as any)

const appAppMediaRoute = appAppMediaImport.update({
  id: '/media',
  path: '/media',
  getParentRoute: () => appAppRoute,
} as any)

const appAppDashboardRoute = appAppDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => appAppRoute,
} as any)

const appAppClassifyRoute = appAppClassifyImport.update({
  id: '/classify',
  path: '/classify',
  getParentRoute: () => appAppRoute,
} as any)

const appAppClassifierRoute = appAppClassifierImport.update({
  id: '/classifier',
  path: '/classifier',
  getParentRoute: () => appAppRoute,
} as any)

const authAuthVerifyAccountIndexRoute = authAuthVerifyAccountIndexImport.update(
  {
    id: '/verify-account/',
    path: '/verify-account/',
    getParentRoute: () => authAuthRoute,
  } as any,
)

const authAuthForgotPasswordIndexRoute =
  authAuthForgotPasswordIndexImport.update({
    id: '/forgot-password/',
    path: '/forgot-password/',
    getParentRoute: () => authAuthRoute,
  } as any)

const authAuthVerifyAccountTokenRoute = authAuthVerifyAccountTokenImport.update(
  {
    id: '/verify-account/$token',
    path: '/verify-account/$token',
    getParentRoute: () => authAuthRoute,
  } as any,
)

const authAuthForgotPasswordTokenRoute =
  authAuthForgotPasswordTokenImport.update({
    id: '/forgot-password/$token',
    path: '/forgot-password/$token',
    getParentRoute: () => authAuthRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(app)': {
      id: '/(app)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appImport
      parentRoute: typeof rootRoute
    }
    '/(app)/_app': {
      id: '/(app)/_app'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appAppImport
      parentRoute: typeof appRoute
    }
    '/(auth)': {
      id: '/(auth)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/_auth': {
      id: '/(auth)/_auth'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authAuthImport
      parentRoute: typeof authRoute
    }
    '/(public)': {
      id: '/(public)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof publicImport
      parentRoute: typeof rootRoute
    }
    '/(public)/_public': {
      id: '/(public)/_public'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof publicPublicImport
      parentRoute: typeof publicRoute
    }
    '/(app)/_app/classifier': {
      id: '/(app)/_app/classifier'
      path: '/classifier'
      fullPath: '/classifier'
      preLoaderRoute: typeof appAppClassifierImport
      parentRoute: typeof appAppImport
    }
    '/(app)/_app/classify': {
      id: '/(app)/_app/classify'
      path: '/classify'
      fullPath: '/classify'
      preLoaderRoute: typeof appAppClassifyImport
      parentRoute: typeof appAppImport
    }
    '/(app)/_app/dashboard': {
      id: '/(app)/_app/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof appAppDashboardImport
      parentRoute: typeof appAppImport
    }
    '/(app)/_app/media': {
      id: '/(app)/_app/media'
      path: '/media'
      fullPath: '/media'
      preLoaderRoute: typeof appAppMediaImport
      parentRoute: typeof appAppImport
    }
    '/(app)/_app/ocr': {
      id: '/(app)/_app/ocr'
      path: '/ocr'
      fullPath: '/ocr'
      preLoaderRoute: typeof appAppOcrImport
      parentRoute: typeof appAppImport
    }
    '/(app)/_app/paintings': {
      id: '/(app)/_app/paintings'
      path: '/paintings'
      fullPath: '/paintings'
      preLoaderRoute: typeof appAppPaintingsImport
      parentRoute: typeof appAppImport
    }
    '/(app)/_app/paintings-ai-desc': {
      id: '/(app)/_app/paintings-ai-desc'
      path: '/paintings-ai-desc'
      fullPath: '/paintings-ai-desc'
      preLoaderRoute: typeof appAppPaintingsAiDescImport
      parentRoute: typeof appAppImport
    }
    '/(app)/_app/people': {
      id: '/(app)/_app/people'
      path: '/people'
      fullPath: '/people'
      preLoaderRoute: typeof appAppPeopleImport
      parentRoute: typeof appAppImport
    }
    '/(app)/_app/user-guide': {
      id: '/(app)/_app/user-guide'
      path: '/user-guide'
      fullPath: '/user-guide'
      preLoaderRoute: typeof appAppUserGuideImport
      parentRoute: typeof appAppImport
    }
    '/(auth)/_auth/signin': {
      id: '/(auth)/_auth/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof authAuthSigninImport
      parentRoute: typeof authAuthImport
    }
    '/(auth)/_auth/signup': {
      id: '/(auth)/_auth/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof authAuthSignupImport
      parentRoute: typeof authAuthImport
    }
    '/(public)/_public/': {
      id: '/(public)/_public/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof publicPublicIndexImport
      parentRoute: typeof publicPublicImport
    }
    '/(auth)/_auth/forgot-password/$token': {
      id: '/(auth)/_auth/forgot-password/$token'
      path: '/forgot-password/$token'
      fullPath: '/forgot-password/$token'
      preLoaderRoute: typeof authAuthForgotPasswordTokenImport
      parentRoute: typeof authAuthImport
    }
    '/(auth)/_auth/verify-account/$token': {
      id: '/(auth)/_auth/verify-account/$token'
      path: '/verify-account/$token'
      fullPath: '/verify-account/$token'
      preLoaderRoute: typeof authAuthVerifyAccountTokenImport
      parentRoute: typeof authAuthImport
    }
    '/(auth)/_auth/forgot-password/': {
      id: '/(auth)/_auth/forgot-password/'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authAuthForgotPasswordIndexImport
      parentRoute: typeof authAuthImport
    }
    '/(auth)/_auth/verify-account/': {
      id: '/(auth)/_auth/verify-account/'
      path: '/verify-account'
      fullPath: '/verify-account'
      preLoaderRoute: typeof authAuthVerifyAccountIndexImport
      parentRoute: typeof authAuthImport
    }
  }
}

// Create and export the route tree

interface appAppRouteChildren {
  appAppClassifierRoute: typeof appAppClassifierRoute
  appAppClassifyRoute: typeof appAppClassifyRoute
  appAppDashboardRoute: typeof appAppDashboardRoute
  appAppMediaRoute: typeof appAppMediaRoute
  appAppOcrRoute: typeof appAppOcrRoute
  appAppPaintingsRoute: typeof appAppPaintingsRoute
  appAppPaintingsAiDescRoute: typeof appAppPaintingsAiDescRoute
  appAppPeopleRoute: typeof appAppPeopleRoute
  appAppUserGuideRoute: typeof appAppUserGuideRoute
}

const appAppRouteChildren: appAppRouteChildren = {
  appAppClassifierRoute: appAppClassifierRoute,
  appAppClassifyRoute: appAppClassifyRoute,
  appAppDashboardRoute: appAppDashboardRoute,
  appAppMediaRoute: appAppMediaRoute,
  appAppOcrRoute: appAppOcrRoute,
  appAppPaintingsRoute: appAppPaintingsRoute,
  appAppPaintingsAiDescRoute: appAppPaintingsAiDescRoute,
  appAppPeopleRoute: appAppPeopleRoute,
  appAppUserGuideRoute: appAppUserGuideRoute,
}

const appAppRouteWithChildren =
  appAppRoute._addFileChildren(appAppRouteChildren)

interface appRouteChildren {
  appAppRoute: typeof appAppRouteWithChildren
}

const appRouteChildren: appRouteChildren = {
  appAppRoute: appAppRouteWithChildren,
}

const appRouteWithChildren = appRoute._addFileChildren(appRouteChildren)

interface authAuthRouteChildren {
  authAuthSigninRoute: typeof authAuthSigninRoute
  authAuthSignupRoute: typeof authAuthSignupRoute
  authAuthForgotPasswordTokenRoute: typeof authAuthForgotPasswordTokenRoute
  authAuthVerifyAccountTokenRoute: typeof authAuthVerifyAccountTokenRoute
  authAuthForgotPasswordIndexRoute: typeof authAuthForgotPasswordIndexRoute
  authAuthVerifyAccountIndexRoute: typeof authAuthVerifyAccountIndexRoute
}

const authAuthRouteChildren: authAuthRouteChildren = {
  authAuthSigninRoute: authAuthSigninRoute,
  authAuthSignupRoute: authAuthSignupRoute,
  authAuthForgotPasswordTokenRoute: authAuthForgotPasswordTokenRoute,
  authAuthVerifyAccountTokenRoute: authAuthVerifyAccountTokenRoute,
  authAuthForgotPasswordIndexRoute: authAuthForgotPasswordIndexRoute,
  authAuthVerifyAccountIndexRoute: authAuthVerifyAccountIndexRoute,
}

const authAuthRouteWithChildren = authAuthRoute._addFileChildren(
  authAuthRouteChildren,
)

interface authRouteChildren {
  authAuthRoute: typeof authAuthRouteWithChildren
}

const authRouteChildren: authRouteChildren = {
  authAuthRoute: authAuthRouteWithChildren,
}

const authRouteWithChildren = authRoute._addFileChildren(authRouteChildren)

interface publicPublicRouteChildren {
  publicPublicIndexRoute: typeof publicPublicIndexRoute
}

const publicPublicRouteChildren: publicPublicRouteChildren = {
  publicPublicIndexRoute: publicPublicIndexRoute,
}

const publicPublicRouteWithChildren = publicPublicRoute._addFileChildren(
  publicPublicRouteChildren,
)

interface publicRouteChildren {
  publicPublicRoute: typeof publicPublicRouteWithChildren
}

const publicRouteChildren: publicRouteChildren = {
  publicPublicRoute: publicPublicRouteWithChildren,
}

const publicRouteWithChildren =
  publicRoute._addFileChildren(publicRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof publicPublicIndexRoute
  '/classifier': typeof appAppClassifierRoute
  '/classify': typeof appAppClassifyRoute
  '/dashboard': typeof appAppDashboardRoute
  '/media': typeof appAppMediaRoute
  '/ocr': typeof appAppOcrRoute
  '/paintings': typeof appAppPaintingsRoute
  '/paintings-ai-desc': typeof appAppPaintingsAiDescRoute
  '/people': typeof appAppPeopleRoute
  '/user-guide': typeof appAppUserGuideRoute
  '/signin': typeof authAuthSigninRoute
  '/signup': typeof authAuthSignupRoute
  '/forgot-password/$token': typeof authAuthForgotPasswordTokenRoute
  '/verify-account/$token': typeof authAuthVerifyAccountTokenRoute
  '/forgot-password': typeof authAuthForgotPasswordIndexRoute
  '/verify-account': typeof authAuthVerifyAccountIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof publicPublicIndexRoute
  '/classifier': typeof appAppClassifierRoute
  '/classify': typeof appAppClassifyRoute
  '/dashboard': typeof appAppDashboardRoute
  '/media': typeof appAppMediaRoute
  '/ocr': typeof appAppOcrRoute
  '/paintings': typeof appAppPaintingsRoute
  '/paintings-ai-desc': typeof appAppPaintingsAiDescRoute
  '/people': typeof appAppPeopleRoute
  '/user-guide': typeof appAppUserGuideRoute
  '/signin': typeof authAuthSigninRoute
  '/signup': typeof authAuthSignupRoute
  '/forgot-password/$token': typeof authAuthForgotPasswordTokenRoute
  '/verify-account/$token': typeof authAuthVerifyAccountTokenRoute
  '/forgot-password': typeof authAuthForgotPasswordIndexRoute
  '/verify-account': typeof authAuthVerifyAccountIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/(app)': typeof appRouteWithChildren
  '/(app)/_app': typeof appAppRouteWithChildren
  '/(auth)': typeof authRouteWithChildren
  '/(auth)/_auth': typeof authAuthRouteWithChildren
  '/(public)': typeof publicRouteWithChildren
  '/(public)/_public': typeof publicPublicRouteWithChildren
  '/(app)/_app/classifier': typeof appAppClassifierRoute
  '/(app)/_app/classify': typeof appAppClassifyRoute
  '/(app)/_app/dashboard': typeof appAppDashboardRoute
  '/(app)/_app/media': typeof appAppMediaRoute
  '/(app)/_app/ocr': typeof appAppOcrRoute
  '/(app)/_app/paintings': typeof appAppPaintingsRoute
  '/(app)/_app/paintings-ai-desc': typeof appAppPaintingsAiDescRoute
  '/(app)/_app/people': typeof appAppPeopleRoute
  '/(app)/_app/user-guide': typeof appAppUserGuideRoute
  '/(auth)/_auth/signin': typeof authAuthSigninRoute
  '/(auth)/_auth/signup': typeof authAuthSignupRoute
  '/(public)/_public/': typeof publicPublicIndexRoute
  '/(auth)/_auth/forgot-password/$token': typeof authAuthForgotPasswordTokenRoute
  '/(auth)/_auth/verify-account/$token': typeof authAuthVerifyAccountTokenRoute
  '/(auth)/_auth/forgot-password/': typeof authAuthForgotPasswordIndexRoute
  '/(auth)/_auth/verify-account/': typeof authAuthVerifyAccountIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/classifier'
    | '/classify'
    | '/dashboard'
    | '/media'
    | '/ocr'
    | '/paintings'
    | '/paintings-ai-desc'
    | '/people'
    | '/user-guide'
    | '/signin'
    | '/signup'
    | '/forgot-password/$token'
    | '/verify-account/$token'
    | '/forgot-password'
    | '/verify-account'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/classifier'
    | '/classify'
    | '/dashboard'
    | '/media'
    | '/ocr'
    | '/paintings'
    | '/paintings-ai-desc'
    | '/people'
    | '/user-guide'
    | '/signin'
    | '/signup'
    | '/forgot-password/$token'
    | '/verify-account/$token'
    | '/forgot-password'
    | '/verify-account'
  id:
    | '__root__'
    | '/(app)'
    | '/(app)/_app'
    | '/(auth)'
    | '/(auth)/_auth'
    | '/(public)'
    | '/(public)/_public'
    | '/(app)/_app/classifier'
    | '/(app)/_app/classify'
    | '/(app)/_app/dashboard'
    | '/(app)/_app/media'
    | '/(app)/_app/ocr'
    | '/(app)/_app/paintings'
    | '/(app)/_app/paintings-ai-desc'
    | '/(app)/_app/people'
    | '/(app)/_app/user-guide'
    | '/(auth)/_auth/signin'
    | '/(auth)/_auth/signup'
    | '/(public)/_public/'
    | '/(auth)/_auth/forgot-password/$token'
    | '/(auth)/_auth/verify-account/$token'
    | '/(auth)/_auth/forgot-password/'
    | '/(auth)/_auth/verify-account/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  appRoute: typeof appRouteWithChildren
  authRoute: typeof authRouteWithChildren
  publicRoute: typeof publicRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  appRoute: appRouteWithChildren,
  authRoute: authRouteWithChildren,
  publicRoute: publicRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/(app)",
        "/(auth)",
        "/(public)"
      ]
    },
    "/(app)": {
      "filePath": "(app)",
      "children": [
        "/(app)/_app"
      ]
    },
    "/(app)/_app": {
      "filePath": "(app)/_app.tsx",
      "parent": "/(app)",
      "children": [
        "/(app)/_app/classifier",
        "/(app)/_app/classify",
        "/(app)/_app/dashboard",
        "/(app)/_app/media",
        "/(app)/_app/ocr",
        "/(app)/_app/paintings",
        "/(app)/_app/paintings-ai-desc",
        "/(app)/_app/people",
        "/(app)/_app/user-guide"
      ]
    },
    "/(auth)": {
      "filePath": "(auth)",
      "children": [
        "/(auth)/_auth"
      ]
    },
    "/(auth)/_auth": {
      "filePath": "(auth)/_auth.tsx",
      "parent": "/(auth)",
      "children": [
        "/(auth)/_auth/signin",
        "/(auth)/_auth/signup",
        "/(auth)/_auth/forgot-password/$token",
        "/(auth)/_auth/verify-account/$token",
        "/(auth)/_auth/forgot-password/",
        "/(auth)/_auth/verify-account/"
      ]
    },
    "/(public)": {
      "filePath": "(public)",
      "children": [
        "/(public)/_public"
      ]
    },
    "/(public)/_public": {
      "filePath": "(public)/_public.tsx",
      "parent": "/(public)",
      "children": [
        "/(public)/_public/"
      ]
    },
    "/(app)/_app/classifier": {
      "filePath": "(app)/_app.classifier.tsx",
      "parent": "/(app)/_app"
    },
    "/(app)/_app/classify": {
      "filePath": "(app)/_app.classify.tsx",
      "parent": "/(app)/_app"
    },
    "/(app)/_app/dashboard": {
      "filePath": "(app)/_app.dashboard.tsx",
      "parent": "/(app)/_app"
    },
    "/(app)/_app/media": {
      "filePath": "(app)/_app.media.tsx",
      "parent": "/(app)/_app"
    },
    "/(app)/_app/ocr": {
      "filePath": "(app)/_app.ocr.tsx",
      "parent": "/(app)/_app"
    },
    "/(app)/_app/paintings": {
      "filePath": "(app)/_app.paintings.tsx",
      "parent": "/(app)/_app"
    },
    "/(app)/_app/paintings-ai-desc": {
      "filePath": "(app)/_app.paintings-ai-desc.tsx",
      "parent": "/(app)/_app"
    },
    "/(app)/_app/people": {
      "filePath": "(app)/_app.people.tsx",
      "parent": "/(app)/_app"
    },
    "/(app)/_app/user-guide": {
      "filePath": "(app)/_app.user-guide.tsx",
      "parent": "/(app)/_app"
    },
    "/(auth)/_auth/signin": {
      "filePath": "(auth)/_auth.signin.tsx",
      "parent": "/(auth)/_auth"
    },
    "/(auth)/_auth/signup": {
      "filePath": "(auth)/_auth.signup.tsx",
      "parent": "/(auth)/_auth"
    },
    "/(public)/_public/": {
      "filePath": "(public)/_public.index.tsx",
      "parent": "/(public)/_public"
    },
    "/(auth)/_auth/forgot-password/$token": {
      "filePath": "(auth)/_auth.forgot-password.$token.tsx",
      "parent": "/(auth)/_auth"
    },
    "/(auth)/_auth/verify-account/$token": {
      "filePath": "(auth)/_auth.verify-account.$token.tsx",
      "parent": "/(auth)/_auth"
    },
    "/(auth)/_auth/forgot-password/": {
      "filePath": "(auth)/_auth.forgot-password.index.tsx",
      "parent": "/(auth)/_auth"
    },
    "/(auth)/_auth/verify-account/": {
      "filePath": "(auth)/_auth.verify-account.index.tsx",
      "parent": "/(auth)/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
